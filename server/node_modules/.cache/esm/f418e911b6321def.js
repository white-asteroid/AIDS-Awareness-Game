let user,hashPassword,comparePassword;_b63‍.x([["register",()=>register],["signup",()=>signup]]);_b63‍.w("../models/users",[["default",["user"],function(v){user=v}]]);_b63‍.w("../helpers/auth",[["hashPassword",["hashPassword"],function(v){hashPassword=v}],["comparePassword",["comparePassword"],function(v){comparePassword=v}]]);

       async function register (req,res){
    //  console.log("Register endpoint -> ",req.body);
    const {em, pw  } = req.body;
    if(!em) return res.status(400).send("email daalne ka re baba");
    if(!pw || pw.length <6 ) return res.status("Not a valid password");


    // for checking email

    const exist = User.findOne({em});
    if(!exist) return res.status(400).send("not registered");
};

       async function signup (req,res){
    //  console.log("Register endpoint -> ",req.body);
    const {name,em, pw  } = req.body;
    if(!name) return res.status(400).send("name is requires");
    if(!em) return res.status(400).send("email daalne ka re baba");
    if(!pw || pw.length <6 ) return res.status("Not a valid password");


    // for checking email

    const exist = User.findOne({em});
    if(exist) return res.status(400).send("Email already registered");

    const hashedPW = await hashPassword(pw);
    try {
        await user.save();
        _b63‍.g.console.log("Reg user -> ",user);
        return res.json({
            ok:true,
        }
        )
    }catch(err){
        _b63‍.g.console.log("registration failed = > ",err);
        return res.status(400).send("error aa gya guys");
    }
};